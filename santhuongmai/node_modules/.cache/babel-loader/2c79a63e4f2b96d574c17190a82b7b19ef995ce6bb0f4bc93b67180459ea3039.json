{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\Desktop\\\\TangPhucHoangTai\\\\DoanNganh1\\\\santhuongmai\\\\src\\\\pages\\\\CommentPage.js\",\n  _s = $RefreshSig$();\nimport Apis, { endpoints } from \"configs/Apis\";\nimport { useEffect, useState } from \"react\";\nimport { Image } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport Myspinner from \"utils/formater\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = () => {\n  _s();\n  const {\n    productId\n  } = useParams();\n  const [product, setProduct] = useState(null);\n  const [comment, setComment] = useState(null);\n  useEffect(() => {\n    const loadProducts = async () => {\n      try {\n        let {\n          data\n        } = await Apis.get(endpoints[\"details\"](productId));\n        setProduct(data);\n      } catch (ex) {\n        console.error(ex);\n      }\n    };\n    loadProducts();\n  }, []);\n  useEffect(() => {\n    const loadComment = async () => {\n      try {\n        let {\n          data\n        } = await Apis.get(endpoints['reviews'], productId);\n        setComment(data);\n      } catch (ex) {\n        console.error(ex);\n      }\n    };\n    loadComment();\n  }, [comment]);\n  function test() {\n    console.log('f:', product);\n    console.log('c:', comment);\n  }\n  if (product === null) return /*#__PURE__*/_jsxDEV(Myspinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 16\n  }, this);\n  if (comment === null)\n    //return <Myspinner />\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"helo: \", productId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: product.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: product.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: test,\n        children: \"dasd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n};\n_s(Comment, \"OX/l8JZKsigBOX3h819q8Pzuh4Q=\", false, function () {\n  return [useParams];\n});\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["Apis","endpoints","useEffect","useState","Image","useParams","Myspinner","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","_s","productId","product","setProduct","comment","setComment","loadProducts","data","get","ex","console","error","loadComment","test","log","fileName","_jsxFileName","lineNumber","columnNumber","children","name","description","price","src","image","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/admin/Desktop/TangPhucHoangTai/DoanNganh1/santhuongmai/src/pages/CommentPage.js"],"sourcesContent":["import Apis, { endpoints } from \"configs/Apis\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Image } from \"react-bootstrap\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Myspinner from \"utils/formater\";\r\n\r\nconst Comment = () => {\r\n    const { productId } = useParams();\r\n    const [product, setProduct] = useState(null);\r\n    const [comment, setComment] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const loadProducts = async () => {\r\n            try {\r\n                let { data } = await Apis.get(endpoints[\"details\"](productId));\r\n                setProduct(data)\r\n            } catch (ex) {\r\n                console.error(ex)\r\n            }\r\n        }\r\n        loadProducts()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const loadComment = async () => {\r\n            try {\r\n                let { data } = await Apis.get(endpoints['reviews'], (productId));\r\n                setComment(data)\r\n            } catch (ex) {\r\n                console.error(ex)\r\n            }\r\n        }\r\n        loadComment();\r\n    }, [comment])\r\n\r\n    function test() {\r\n        console.log('f:', product)\r\n        console.log('c:', comment)\r\n    }\r\n\r\n    if (product === null)\r\n        return <Myspinner />\r\n\r\n    if (comment === null)\r\n        //return <Myspinner />\r\n\r\n    return (\r\n        <>\r\n            <h1>helo: {productId}</h1>\r\n            <div >\r\n                <h1>{product.name}</h1>\r\n                <h1>{product.description}</h1>\r\n                <h1>{product.price}</h1>\r\n                <Image src={product.image}\r\n                    alt={product.name} />\r\n            </div>\r\n\r\n            <button onClick={test}>dasd</button>\r\n        </>\r\n    )\r\n}\r\nexport default Comment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}